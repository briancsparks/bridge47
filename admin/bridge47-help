#!/bin/bash -e

prj="ntl"
web_color="blue"
color="teal"
stack="test"
ip="10.13.8.20"
prod_ip="10.12.8.20"
domain_name="mobilewebassist.net"

eval "$(cli-shezargs $@)"

[[ $domain == dev ]] && domain_name="mobiledevassist.net"

#echo "curl 'http://b47hq.mobilewebassist.net/$prj/clientStart' "

cat <<EOF

You can set:
  \$prj
  \$web_color
  \$color
  \$stack
  \$ip
  \$prod_ip
  \$domain

-----------------------------------------------
Building Servers:
-----------------------------------------------

time build-instance
time build-instance --skip-ami --skip-nginx --skip-basic

-----------------------------------------------
Starting Servers:
-----------------------------------------------
  --pause

#          ---- Launch hq (/clientStart) server
run-hq-instance --color=$color
run-hq-instance --stack=prod --color=$color

#          ---- Launch web-tier
run-blue-green-web-instance --color=$color --stack=$stack

#          ---- Launch echo server to test, if needed
(cd dev/bridge47/bridge47-plugins/echo/ && pm2 start echo.js -- --port=5790 --color=${color} --stack=${stack})

#          ---- Feed and telemetry / ingest
(cd ~/dev/river && ./bridge47-plugins/ingest/bin/run-ingest-instance --stack=${stack} --color=${color})
(cd ~/dev/river && ./bridge47-plugins/telemetry/bin/run-telemetry-instance --stack=${stack} --color=${color})

-----------------------------------------------
FQDNs:
-----------------------------------------------

#          ---- Assign the hq FQDN
assign-fqdn --fqdn=b47hq.mobilewebassist.net --stack=prod --ip=${prod_ip}
assign-fqdn --fqdn=b47hq.mobiledevassist.net --ip=${ip}

#          ---- Promote the test color to be main
ra invoke "\$(fnn ~/dev lib/cluster-db\.js$)" promoteToMain --project=${prj} --stack=${stack} --color=${color}
ra invoke "\$(fnn ~/dev lib/cluster-db\.js$)" promoteRunConfigAmi

-----------------------------------------------
Interaction:
-----------------------------------------------

#          ---- test /clientStart
curl -sS 'http://b47hq.${domain_name}/$prj/clientStart' | jq '.'
curl -sS 'http://b47hq.${domain_name}/$prj/clientStart?rsvr=hqqa' | jq '.'

#          ---- test /echo (using sacurl uses client certs)
curl -sS 'http://b47xapi.${domain_name}/echo/api/v1/${color}/foobar' | jq '.'
sacurl -sS 'https://b47console.${domain_name}/echo/api/v1/${color}/foobar' | jq '.'

#          ---- Listen for a data feed
sacurl -sS 'https://b47console.${domain_name}/ntl/xapi/v1/${color}/feed?clientId=asdf&watch=bsdf&expectJson=1' | jq '.'

#          ---- Send data to a data feed
curl -sS "http://${web_color}-b47.mobiledevassist.net/ntl/api/v1/${color}/ingest?sessionId=bsdf-12345478" -d '{"payload":[{"a":42}]}' -H 'application/json'

#          ---- Send data to a data feed manually using redis
redis-cli LPUSH river:feed:asdf '{"payload":[{"a":42}]}'

#          ---- Download a sessions telemetry data
sacurl -sS "https://b47console.${domain_name}/ntl/xapi/v1/${color}/download?sessionId=bsdf-12345478"
sacurl -sS "https://b47console.${domain_name}/ntl/xapi/v1/${color}/download?sessionId=A00CIOMLvczYMoUcdf0Vhy6SDuzlvwgWlXsqiu70vIOVttuC10gx0SojgN8faUHC-20180217015434292"

#          ---- Switch web-tier to color
ra invoke "\$(find ~/dev -type f | egrep lib/cluster-db\.js$)" updateProject --project-id=${prj} --upstream=${color}-b47 --telemetry=${color}-b47 --attrstream=${color}-b47

EOF

