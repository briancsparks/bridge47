#!/bin/bash -e

eval "$(cli-shezargs $@)"

# --------- Set some parameters ----------
osversion="$(lsb_release -c | awk '{print $2}')"

if [[ ${osversion} =~ xenial ]]; then
  python_cmd="python3"
else
  python_cmd="python"
fi

# --------- Make scotty dir workable ----------

# Make a user-specific binary dir
mkdir -p ~/local/bin
sudo perl -pi -e "s/PATH=\"/PATH=\"\/home\/${USER}\/local\/bin:/g" /etc/environment
export PATH="${HOME}/local/bin:$PATH"

# setup ~/.cache ahead of time with the proper permissions
mkdir -p ~/.cache
chmod a+rx ~/.cache
chmod ug+w ~/.cache

# --------- Install AWS tools ----------

# AWS cli
mkdir -p ~/zz_packages && cd $_
curl -s -O 'https://bootstrap.pypa.io/get-pip.py'
sudo -H ${python_cmd} get-pip.py
sudo -H pip install awscli
sudo -H pip install saws

## --------- Validate with github ----------
#if ! git config --global user.email; then
#
#  # Github
#  ssh -o "StrictHostKeyChecking no" git@github.com || true
#
#  # Github Enterprise
#  ssh -o "StrictHostKeyChecking no" git@github.azc.ext.hp.com || true
#
#  git config --global user.email "yoshi.t.munchakoopas@hp.com"
#  git config --global user.name "Yoshi T. Munchakoopas"
#
#  if [[ $osversion != precise ]]; then
#    git config --global push.default simple
#  fi
#fi

# --------- Node command-line tools ----------
npm install -g underscore-cli run-anywhere serve pm2

# ---------- Install the bulk of the apt stuff ----------

# Add other repos -- rsyslog
sudo DEBIAN_FRONTEND=noninteractive add-apt-repository -y ppa:adiscon/v8-stable

# Install big, basic stuff
sudo DEBIAN_FRONTEND=noninteractive apt-get update
sudo DEBIAN_FRONTEND=noninteractive apt-get install -y \
    apt-transport-https curl tree ntp htop jq \
    libreadline6 git-core build-essential openssl nmap mercurial socat gawk libcurl4-openssl-dev ncurses-dev libncurses5-dev \
    libgdbm-dev libyaml-dev libffi-dev libreadline6-dev zlib1g zlib1g-dev libssl-dev autoconf libc6-dev automake libtool \
    bison subversion pkg-config libperl-dev liblzma-dev libpcre3 libpcre3-dev libgd-tools libsqlite3-dev sqlite3 libxml2-dev \
    libxslt-dev libmysqlclient-dev cscope exuberant-ctags realpath unzip libcairo2 libcairo2-dev libjpeg-dev rsyslog silversearcher-ag

# ---------- rsyslog ----------

# Turn on UDP inside rsyslog
sudo perl -pi -e 's/^#(.*ModLoad\s+imudp.*)$/$1/'    /etc/rsyslog.conf
sudo perl -pi -e 's/^#(.*UDPServerRun\s+514.*)$/$1/' /etc/rsyslog.conf

# ---------- Post fixups ----------

# /var/log needs to have group write access
sudo chmod g+w /var
sudo chmod g+w /var/log


# --------- Fetch pm2-js-cluster ----------
(mkdir -p ~/dev/ && cd ~/dev/ && git clone git@github.com:briancsparks/pm2-js-cluster)

